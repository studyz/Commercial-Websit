<?phpif ( ! isset( $content_width ) ) $content_width = 900;if( !class_exists('Digitalworld_Functions') ){    class Digitalworld_Functions{        /**         * Instance of the class.         *         * @since   1.0.0         *         * @var   object         */        protected static $instance = null;        /**         * Initialize the plugin by setting localization and loading public scripts         * and styles.         *         * @since    1.0.0         */        public function __construct() {            add_action( 'after_setup_theme', array($this,'settup') );            add_action( 'widgets_init', array($this,'widgets_init') );            add_action( 'wp_enqueue_scripts', array($this,'scripts') );            add_filter( 'get_default_comment_status', array($this,'open_default_comments_for_page'), 10, 3 );            add_action('init',array($this,'add_muti_widgets'));            $this->includes();        }        public  function settup(){            /*            * Make theme available for translation.            * Translations can be filed in the /languages/ directory.            * If you're building a theme based on boutique, use a find and replace            * to change 'digitalworld' to the name of your theme in all the template files            */            load_theme_textdomain( 'digitalworld', get_template_directory() . '/languages' );            // Add default posts and comments RSS feed links to head.            add_theme_support( 'automatic-feed-links' );            /*             * Let WordPress manage the document title.             * By adding theme support, we declare that this theme does not use a             * hard-coded <title> tag in the document head, and expect WordPress to             * provide it for us.             */            add_theme_support( 'title-tag' );            /*             * Enable support for Post Thumbnails on posts and pages.             *             * See: https://codex.wordpress.org/Function_Reference/add_theme_support#Post_Thumbnails             */            add_theme_support( 'post-thumbnails' );            set_post_thumbnail_size( 825, 510, true );            /*This theme uses wp_nav_menu() in two locations.*/            register_nav_menus( array(                'primary'        => esc_html__('Primary Menu', 'digitalworld'),                'vertical_menu'  => esc_html__('Vertical Menu', 'digitalworld'),                'top_left_menu'  => esc_html__('Top bar left menu', 'digitalworld'),                'middle-menu'    => esc_html__( 'Middle menu', 'digitalworld' ),            ) );            /*             * Switch default core markup for search form, comment form, and comments             * to output valid HTML5.             */            add_theme_support( 'html5', array(                'search-form', 'comment-form', 'comment-list', 'gallery', 'caption'            ) );            /*Support woocommerce*/            add_theme_support( 'woocommerce' );        }        /**         * Register widget area.         *         * @since Digitalworld 1.0         *         * @link https://codex.wordpress.org/Function_Reference/register_sidebar         */        function widgets_init() {            register_sidebar( array(                'name'          => esc_html__( 'Widget Area', 'digitalworld' ),                'id'            => 'widget-area',                'description'   => esc_html__( 'Add widgets here to appear in your sidebar.', 'digitalworld' ),                'before_widget' => '<div id="%1$s" class="widget %2$s">',                'after_widget'  => '</div>',                'before_title'  => '<h2 class="widgettitle">',                'after_title'   => '<span class="arow"></span></h2>',            ) );            register_sidebar( array(                'name'          => esc_html__( 'Shop Widget Area', 'digitalworld' ),                'id'            => 'shop-widget-area',                'description'   => esc_html__( 'Add widgets here to appear in your sidebar.', 'digitalworld' ),                'before_widget' => '<div id="%1$s" class="widget %2$s">',                'after_widget'  => '</div>',                'before_title'  => '<h2 class="widgettitle">',                'after_title'   => '<span class="arow"></span></h2>',            ) );        }        function add_muti_widgets() {            $opt_multi_slidebars = digitalworld_option('opt_multi_slidebars','');            if(is_array( $opt_multi_slidebars ) && count( $opt_multi_slidebars ) > 0 ){                foreach ($opt_multi_slidebars as $value ){                    if( $value  && $value != ''){                        register_sidebar( array(                            'name'          => $value,                            'id'            => 'kt-custom-sidebar-'.sanitize_key($value),                            'before_widget' => '<div id="%1$s" class="widget %2$s">',                            'after_widget'  => '</div>',                            'before_title'  => '<h2 class="widgettitle">',                            'after_title'   => '<span class="arow"></span></h2>',                        ) );                    }                }            }        }        /*Load Google fonts*/        function google_fonts_url(){            $fonts_url = '';            $font_families = array();            $font_families[] = 'Open+Sans:300,300i,400,400i,600,600i,700,700i,800,800i';            $query_args = array(                'family' => implode('|', $font_families ),                'subset' => 'latin,latin-ext'            );            $fonts_url = add_query_arg($query_args, 'https://fonts.googleapis.com/css');            return esc_url_raw($fonts_url);        }        /**         * Enqueue scripts and styles.         *         * @since digitalworld 1.0         */        function scripts() {            // Load fonts            wp_enqueue_style( 'digitalworld-googlefonts', $this->google_fonts_url(), array(), null );            /*Load our main stylesheet.*/            wp_enqueue_style( 'bootstrap', trailingslashit ( get_template_directory_uri() ). 'css/bootstrap.min.css', array(), '2.4' );            if ( is_rtl() ) {                wp_enqueue_style( 'bootstrap-rtl', trailingslashit ( get_template_directory_uri() ). 'css/bootstrap-rtl.min.css', array(), '2.4' );            }            wp_enqueue_style( 'owlcarousel', trailingslashit ( get_template_directory_uri() ). 'css/owl.carousel.min.css', array(), '2.4' );            wp_enqueue_style( 'font-awesome', trailingslashit ( get_template_directory_uri() ). 'css/font-awesome.min.css', array(), '2.4' );            wp_enqueue_style( 'animate', trailingslashit ( get_template_directory_uri() ). 'css/animate.min.css', array(), '2.4' );            wp_enqueue_style( 'chosen', trailingslashit ( get_template_directory_uri() ). 'css/chosen.min.css', array(), '2.4' );            wp_enqueue_style( 'linearicons-free', trailingslashit ( get_template_directory_uri() ). 'css/Linearicons-Free.min.css', array(), '1.0' );            wp_enqueue_style( 'flaticon', trailingslashit ( get_template_directory_uri() ). 'css/flaticon.min.css', array(), '1.0' );            wp_enqueue_style( 'easyzoom', trailingslashit ( get_template_directory_uri() ). 'css/easyzoom.min.css', array(), '1.0' );            wp_enqueue_style( 'digitalworld-main-style', get_stylesheet_uri() );            // Right to left            if ( is_rtl() ) {                wp_enqueue_style('digitalworld-style-rtl', trailingslashit(get_template_directory_uri()) . 'css/rtl.css', array(), '1.0');            }            if ( is_singular() && comments_open() && get_option( 'thread_comments' ) ) {                wp_enqueue_script( 'comment-reply' );            }            /*Load lib js*/            wp_enqueue_script( 'bootstrap', trailingslashit ( get_template_directory_uri() ). 'js/bootstrap.min.js', array( 'jquery' ), '2.4', true );            wp_enqueue_script( 'jquery-sticky', trailingslashit ( get_template_directory_uri() ). 'js/jquery.sticky.min.js', array( 'jquery' ), '2.4', true );            wp_enqueue_script( 'owlcarousel', trailingslashit ( get_template_directory_uri() ). 'js/owl.carousel.min.js', array( 'jquery' ), '2.4', true );            wp_enqueue_script( 'jquery-plugin', trailingslashit ( get_template_directory_uri() ). 'js/jquery.plugin.js', array( 'jquery' ), '2.0.4', true );            wp_enqueue_script( 'countdown', trailingslashit ( get_template_directory_uri() ). 'js/jquery.countdown.min.js', array( 'jquery' ), '2.0.4', true );            wp_enqueue_script( 'chosen-jquery', trailingslashit ( get_template_directory_uri() ). 'js/chosen.jquery.min.js', array( 'jquery' ), '2.4', true );            wp_enqueue_script( 'actual', trailingslashit ( get_template_directory_uri() ). 'js/jquery.actual.min.js', array( 'jquery' ), '2.4', true );            wp_enqueue_script( 'Modernizr', trailingslashit ( get_template_directory_uri() ). 'js/Modernizr.min.js', array( 'jquery' ), '2.4', true );            wp_enqueue_script( 'easyzoom', trailingslashit ( get_template_directory_uri() ). 'js/easyzoom.min.js', array( 'jquery' ), '2.4', true );            wp_enqueue_script( 'lazy-load', trailingslashit ( get_template_directory_uri() ). 'js/jquery.lazyload.min.js', array( 'jquery' ), '2.4', true );            wp_enqueue_script( 'html5lightbox', trailingslashit ( get_template_directory_uri() ). 'js/html5lightbox.js', array( 'jquery' ), '2.4', true );            wp_enqueue_script( 'clamp', trailingslashit ( get_template_directory_uri() ). 'js/clamp.js', array( 'jquery' ), '0.5.1', true );            $opt_gmap_api_key = digitalworld_option('opt_gmap_api_key','');            $opt_gmap_api_key = trim($opt_gmap_api_key);            wp_enqueue_script( 'maps',esc_url( 'https://maps.googleapis.com/maps/api/js?key='.$opt_gmap_api_key ), array( 'jquery' ), null, true );            wp_enqueue_script( 'digitalworld-script', get_template_directory_uri() . '/js/functions.js', array( 'jquery' ), '1.0', true );            wp_localize_script( 'digitalworld-script', 'digitalworld_ajax_fontend', array(                'ajaxurl'             => admin_url( 'admin-ajax.php' ),                'security'            => wp_create_nonce( 'digitalworld_ajax_fontend' )            ) );            $digitalworld_enable_sticky_menu = digitalworld_option('digitalworld_enable_sticky_menu',1);            $digitalworld_enable_popup_mobile = digitalworld_option('digitalworld_enable_popup_mobile',0);            $digitalworld_popup_delay_time = digitalworld_option('digitalworld_popup_delay_time',0);            $digitalworld_enable_popup = digitalworld_option('digitalworld_enable_popup',0);            $digitalworld_enable_lazy = digitalworld_option('digitalworld_enable_lazy','1');            wp_localize_script( 'digitalworld-script', 'digitalworld_fontend_global_script', array(                'digitalworld_enable_sticky_menu'  => $digitalworld_enable_sticky_menu,                'digitalworld_enable_popup'        => $digitalworld_enable_popup,                'digitalworld_popup_delay_time'    => $digitalworld_popup_delay_time,                'digitalworld_enable_popup_mobile' => $digitalworld_enable_popup_mobile,                'digitalworld_enable_lazy' => $digitalworld_enable_lazy            ) );            // Right to left            if ( is_rtl() ) {                wp_enqueue_script( 'digitalworld-script-rtl', get_template_directory_uri() . '/js/frontend-rtl.js', array(), '1.0', true );            }        }        /**         * Filter whether comments are open for a given post type.         *         * @param string $status       Default status for the given post type,         *                             either 'open' or 'closed'.         * @param string $post_type    Post type. Default is `post`.         * @param string $comment_type Type of comment. Default is `comment`.         * @return string (Maybe) filtered default status for the given post type.         */        function open_default_comments_for_page( $status, $post_type, $comment_type ) {            if( 'page' == $post_type){                return 'open';            }            return $status;            /*You could be more specific here for different comment types if desired*/        }        public function includes(){            include_once( get_template_directory().'/famework/famework.php' );        }    }    new  Digitalworld_Functions();}